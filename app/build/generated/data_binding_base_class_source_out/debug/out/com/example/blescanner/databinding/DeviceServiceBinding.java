// Generated by data binding compiler. Do not edit!
package com.example.blescanner.databinding;

import android.bluetooth.BluetoothGattService;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.blescanner.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class DeviceServiceBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardViewServis;

  @NonNull
  public final TextView charakterystyki;

  @NonNull
  public final TextView device;

  @NonNull
  public final ImageView favorite;

  @NonNull
  public final TextView gattCostam;

  @NonNull
  public final Button ledButton;

  @NonNull
  public final TextView nazwa;

  @NonNull
  public final TextView servises;

  @NonNull
  public final TextView servisy;

  @Bindable
  protected BluetoothGattService mGatt;

  protected DeviceServiceBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cardViewServis, TextView charakterystyki, TextView device, ImageView favorite,
      TextView gattCostam, Button ledButton, TextView nazwa, TextView servises, TextView servisy) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardViewServis = cardViewServis;
    this.charakterystyki = charakterystyki;
    this.device = device;
    this.favorite = favorite;
    this.gattCostam = gattCostam;
    this.ledButton = ledButton;
    this.nazwa = nazwa;
    this.servises = servises;
    this.servisy = servisy;
  }

  public abstract void setGatt(@Nullable BluetoothGattService gatt);

  @Nullable
  public BluetoothGattService getGatt() {
    return mGatt;
  }

  @NonNull
  public static DeviceServiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.device_service, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DeviceServiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DeviceServiceBinding>inflateInternal(inflater, R.layout.device_service, root, attachToRoot, component);
  }

  @NonNull
  public static DeviceServiceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.device_service, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DeviceServiceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DeviceServiceBinding>inflateInternal(inflater, R.layout.device_service, null, false, component);
  }

  public static DeviceServiceBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DeviceServiceBinding bind(@NonNull View view, @Nullable Object component) {
    return (DeviceServiceBinding)bind(component, view, R.layout.device_service);
  }
}
