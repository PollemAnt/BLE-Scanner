// Generated by data binding compiler. Do not edit!
package com.example.blescanner.databinding;

import android.bluetooth.le.ScanResult;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.blescanner.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ScanResultLayoutBinding extends ViewDataBinding {
  @NonNull
  public final ImageView blinkyLogo;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final TextView deviceAddress;

  @NonNull
  public final TextView deviceDistance;

  @NonNull
  public final TextView deviceName;

  @NonNull
  public final Button selectButton;

  @NonNull
  public final ImageView signalLogo;

  @NonNull
  public final TextView signalStrength;

  @Bindable
  protected ScanResult mResult;

  protected ScanResultLayoutBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView blinkyLogo, CardView cardView, TextView deviceAddress, TextView deviceDistance,
      TextView deviceName, Button selectButton, ImageView signalLogo, TextView signalStrength) {
    super(_bindingComponent, _root, _localFieldCount);
    this.blinkyLogo = blinkyLogo;
    this.cardView = cardView;
    this.deviceAddress = deviceAddress;
    this.deviceDistance = deviceDistance;
    this.deviceName = deviceName;
    this.selectButton = selectButton;
    this.signalLogo = signalLogo;
    this.signalStrength = signalStrength;
  }

  public abstract void setResult(@Nullable ScanResult result);

  @Nullable
  public ScanResult getResult() {
    return mResult;
  }

  @NonNull
  public static ScanResultLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.scan_result_layout, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ScanResultLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ScanResultLayoutBinding>inflateInternal(inflater, R.layout.scan_result_layout, root, attachToRoot, component);
  }

  @NonNull
  public static ScanResultLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.scan_result_layout, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ScanResultLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ScanResultLayoutBinding>inflateInternal(inflater, R.layout.scan_result_layout, null, false, component);
  }

  public static ScanResultLayoutBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ScanResultLayoutBinding bind(@NonNull View view, @Nullable Object component) {
    return (ScanResultLayoutBinding)bind(component, view, R.layout.scan_result_layout);
  }
}
